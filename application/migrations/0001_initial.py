# Generated by Django 3.0.2 on 2020-11-11 14:30

import application.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Guardians',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_limit', models.PositiveIntegerField(validators=[application.models.is_more_than_eighteen])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Questions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='QuestionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_of_players', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Question Type',
                'verbose_name_plural': 'Question Types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('age_limit', models.PositiveIntegerField(validators=[application.models.is_more_than_eighteen])),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('questions', models.ManyToManyField(blank=True, related_name='_quiz_questions_+', to='application.Question')),
            ],
            options={
                'verbose_name_plural': 'Quizzes',
            },
        ),
        migrations.CreateModel(
            name='Screen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Quiz Screen',
                'verbose_name_plural': 'Quiz Screens',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Subjects',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('is_active', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('participants', models.ManyToManyField(blank=True, related_name='_team_participants_+', to=settings.AUTH_USER_MODEL)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='participating-in+', to='application.Quiz')),
            ],
            options={
                'verbose_name_plural': 'Teams',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('guardian', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='guardian+', to='application.Guardian')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Students',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='quiz',
            name='subjects',
            field=models.ManyToManyField(to='application.Subject'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='teams',
            field=models.ManyToManyField(blank=True, related_name='_quiz_teams_+', to='application.Team'),
        ),
        migrations.CreateModel(
            name='QuestionStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statement', models.TextField(help_text='add your question statement/defination here you can add multiple statements to.')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Question')),
                ('screen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Screen')),
            ],
            options={
                'verbose_name': 'Question Statement',
                'verbose_name_plural': 'Questions Statements',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='QuestionImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, height_field=200, null=True, upload_to=None, width_field=200)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Question')),
                ('screen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Screen')),
            ],
            options={
                'verbose_name': 'Question Image',
                'verbose_name_plural': 'Questions Images',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='QuestionChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Question')),
            ],
            options={
                'verbose_name': 'Question Choice',
                'verbose_name_plural': 'Questions Choices',
            },
        ),
        migrations.CreateModel(
            name='QuestionAudio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, null=True)),
                ('audio', models.FileField(blank=True, null=True, upload_to=None)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Question')),
                ('screen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Screen')),
            ],
            options={
                'verbose_name': 'Question Audio',
                'verbose_name_plural': 'Questions Audios',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='question',
            name='choices_control',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='select_choices', to='application.Screen'),
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ManyToManyField(blank=True, related_name='quiz', to='application.Quiz'),
        ),
        migrations.AddField(
            model_name='question',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Subject'),
        ),
        migrations.AddField(
            model_name='question',
            name='submission_control',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submited_by', to='application.Screen'),
        ),
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('successful', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='question-attempt+', to='application.Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempt-by+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Attempts',
            },
        ),
    ]
